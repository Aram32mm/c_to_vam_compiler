
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULDIVrightUMINUSASSIGN DIV IDENTIFIER INTEGER LBRACE LPAREN MINUS MUL PLUS RBRACE RETURN RPAREN SEMICOLON TYPEprogram : functionfunction : TYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACEstatements : statement\n| statements statementstatement : variable_declaration\n| assignment_statement\n| return_statementvariable_declaration : TYPE IDENTIFIER SEMICOLONassignment_statement : IDENTIFIER ASSIGN expression SEMICOLONreturn_statement : RETURN expression SEMICOLONexpression : expression PLUS term\n| expression MINUS term\n| termterm : term MUL factor\n| term DIV factor\n| factorfactor : INTEGER\n| IDENTIFIER\n| LPAREN expression RPAREN\n| MINUS factor %prec UMINUS'
    
_lr_action_items = {'TYPE':([0,7,10,11,12,13,14,19,27,29,36,],[3,8,8,-3,-5,-6,-7,-4,-8,-10,-9,]),'$end':([1,2,18,],[0,-1,-2,]),'IDENTIFIER':([3,7,8,10,11,12,13,14,15,17,19,22,26,27,29,30,31,32,33,36,],[4,9,16,9,-3,-5,-6,-7,25,25,-4,25,25,-8,-10,25,25,25,25,-9,]),'LPAREN':([4,15,17,22,26,30,31,32,33,],[5,26,26,26,26,26,26,26,26,]),'RPAREN':([5,21,23,24,25,34,35,37,38,39,40,41,],[6,-13,-16,-17,-18,-20,41,-11,-12,-14,-15,-19,]),'LBRACE':([6,],[7,]),'RETURN':([7,10,11,12,13,14,19,27,29,36,],[15,15,-3,-5,-6,-7,-4,-8,-10,-9,]),'ASSIGN':([9,],[17,]),'RBRACE':([10,11,12,13,14,19,27,29,36,],[18,-3,-5,-6,-7,-4,-8,-10,-9,]),'INTEGER':([15,17,22,26,30,31,32,33,],[24,24,24,24,24,24,24,24,]),'MINUS':([15,17,20,21,22,23,24,25,26,28,30,31,32,33,34,35,37,38,39,40,41,],[22,22,31,-13,22,-16,-17,-18,22,31,22,22,22,22,-20,31,-11,-12,-14,-15,-19,]),'SEMICOLON':([16,20,21,23,24,25,28,34,37,38,39,40,41,],[27,29,-13,-16,-17,-18,36,-20,-11,-12,-14,-15,-19,]),'PLUS':([20,21,23,24,25,28,34,35,37,38,39,40,41,],[30,-13,-16,-17,-18,30,-20,30,-11,-12,-14,-15,-19,]),'MUL':([21,23,24,25,34,37,38,39,40,41,],[32,-16,-17,-18,-20,32,32,-14,-15,-19,]),'DIV':([21,23,24,25,34,37,38,39,40,41,],[33,-16,-17,-18,-20,33,33,-14,-15,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'function':([0,],[2,]),'statements':([7,],[10,]),'statement':([7,10,],[11,19,]),'variable_declaration':([7,10,],[12,12,]),'assignment_statement':([7,10,],[13,13,]),'return_statement':([7,10,],[14,14,]),'expression':([15,17,26,],[20,28,35,]),'term':([15,17,26,30,31,],[21,21,21,37,38,]),'factor':([15,17,22,26,30,31,32,33,],[23,23,34,23,23,23,39,40,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function','program',1,'p_program','parser.py',24),
  ('function -> TYPE IDENTIFIER LPAREN RPAREN LBRACE statements RBRACE','function',7,'p_function','parser.py',28),
  ('statements -> statement','statements',1,'p_statements','parser.py',32),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',33),
  ('statement -> variable_declaration','statement',1,'p_statement','parser.py',40),
  ('statement -> assignment_statement','statement',1,'p_statement','parser.py',41),
  ('statement -> return_statement','statement',1,'p_statement','parser.py',42),
  ('variable_declaration -> TYPE IDENTIFIER SEMICOLON','variable_declaration',3,'p_variable_declaration','parser.py',46),
  ('assignment_statement -> IDENTIFIER ASSIGN expression SEMICOLON','assignment_statement',4,'p_assignment_statement','parser.py',50),
  ('return_statement -> RETURN expression SEMICOLON','return_statement',3,'p_return_statement','parser.py',54),
  ('expression -> expression PLUS term','expression',3,'p_expression','parser.py',58),
  ('expression -> expression MINUS term','expression',3,'p_expression','parser.py',59),
  ('expression -> term','expression',1,'p_expression','parser.py',60),
  ('term -> term MUL factor','term',3,'p_term','parser.py',69),
  ('term -> term DIV factor','term',3,'p_term','parser.py',70),
  ('term -> factor','term',1,'p_term','parser.py',71),
  ('factor -> INTEGER','factor',1,'p_factor','parser.py',80),
  ('factor -> IDENTIFIER','factor',1,'p_factor','parser.py',81),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','parser.py',82),
  ('factor -> MINUS factor','factor',2,'p_factor','parser.py',83),
]
